import streamlit as st
import pandas as pd # Para o mapa de exemplo
import numpy as np  # Para o mapa de exemplo

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(
    page_title="Olhos da Lei - IA",
    page_icon="üëÅÔ∏è",
    layout="wide"
)

# --- Barra Lateral para Navega√ß√£o ---
st.sidebar.title("üî≠ Navega√ß√£o Principal")
pagina_selecionada = st.sidebar.radio(
    "Escolha uma se√ß√£o:",
    (
        "P√°gina Inicial",
        "Visualiza√ß√£o de C√¢meras Ao Vivo",
        "Mapa de Ocorr√™ncias",
        "Relat√≥rios Detalhados",
        "Configura√ß√µes de Alerta",
        "Integra√ß√£o com C√£es-Rob√¥s"
    ),
    key="nav_radio" # Adicionando uma chave para garantir o estado
)
st.sidebar.markdown("---")
st.sidebar.info(
    """
    **Olhos da Lei v0.2**\n
    Projeto em desenvolvimento.
    """
)
st.sidebar.caption("Imers√£o Alura + Google Gemini")


# --- Conte√∫do da P√°gina (varia conforme a sele√ß√£o na barra lateral) ---

if pagina_selecionada == "P√°gina Inicial":
    st.title("üëÅÔ∏è Olhos da Lei: Super-Agente de IA")
    st.subheader("Garantindo a seguran√ßa da popula√ß√£o com Intelig√™ncia Artificial")

    st.markdown("""
    Bem-vindo ao painel de controle do **Olhos da Lei**!

    Este sistema utiliza Intelig√™ncia Artificial para monitorar espa√ßos p√∫blicos atrav√©s de c√¢meras,
    detectando potenciais amea√ßas em tempo real para uma resposta r√°pida e eficaz.

    Use o menu na barra lateral √† esquerda para navegar pelas diferentes funcionalidades.
    """)
    st.info("Esta √© a p√°gina inicial. Selecione uma funcionalidade na barra lateral para come√ßar.", icon="üëà")


elif pagina_selecionada == "Visualiza√ß√£o de C√¢meras Ao Vivo":
    st.header("üìπ Visualiza√ß√£o de C√¢meras Ao Vivo")
    st.markdown("Acompanhe feeds de c√¢meras em tempo real.")

    # Exemplo de URLs de c√¢meras p√∫blicas (MJPEG s√£o mais f√°ceis de embutir)
    # Estas URLs s√£o exemplos e podem n√£o estar sempre online ou podem mudar.
    # √â importante encontrar URLs de streams MJPEG ou que possam ser embutidas em um <iframe>.
    cameras_publicas = {
        "Praia de Copacabana (Exemplo 1 - Pode n√£o funcionar sempre)": "http://200.20.203.134/mjpg/video.mjpg?timestamp=1605659000", # Exemplo, pode estar offline
        "Tr√°fego em Cidade Aleat√≥ria (Exemplo 2 - Procurar por 'inurl:axis-cgi/mjpg/video.mjpg')": "http://pendelcam.kip.uni-heidelberg.de/mjpg/video.mjpg", # Exemplo da Univ. Heidelberg
        "Outra C√¢mera (Exemplo 3)": "http://webcampub.multivision.ru:8090/mjpg/video.mjpg", # Outro exemplo
        "Placeholder - Adicione sua URL": ""
    }

    camera_escolhida_nome = st.selectbox(
        "Selecione uma C√¢mera P√∫blica (Exemplo):",
        list(cameras_publicas.keys())
    )
    url_camera_selecionada = cameras_publicas[camera_escolhida_nome]

    if url_camera_selecionada:
        st.markdown(f"**Visualizando:** {camera_escolhida_nome}")
        st.markdown(f"<small>URL: {url_camera_selecionada}</small>", unsafe_allow_html=True)
        try:
            # Para streams MJPEG, st.image funciona. Outros podem precisar de HTML/iframe.
            st.image(url_camera_selecionada, caption=f"Feed da {camera_escolhida_nome}", width=720)
            st.success("Feed da c√¢mera carregado.")
        except Exception as e:
            st.error(f"N√£o foi poss√≠vel carregar o feed da c√¢mera selecionada.")
            st.warning(f"Detalhes do erro: {e}")
            st.info("Dica: Streams MJPEG s√£o mais compat√≠veis. Verifique se a URL est√° correta e acess√≠vel.")
            st.markdown("Voc√™ pode tentar abrir a URL diretamente no seu navegador para testar.")
    elif camera_escolhida_nome == "Placeholder - Adicione sua URL":
        st.info("Adicione uma URL de stream MJPEG v√°lida no c√≥digo para testar esta funcionalidade.")
    else:
        st.info("Selecione uma c√¢mera da lista para visualizar.")

    st.markdown("---")
    st.subheader("Detec√ß√£o de Amea√ßas Nesta C√¢mera")
    if st.button("Analisar feed da c√¢mera selecionada"):
        st.info("‚ö†Ô∏è Implementa√ß√£o em andamento: An√°lise de IA para esta c√¢mera.")


elif pagina_selecionada == "Mapa de Ocorr√™ncias":
    st.header("üó∫Ô∏è Mapa de Ocorr√™ncias")
    st.markdown("Visualize geograficamente as ocorr√™ncias e alertas detectados.")

    # Gerando dados de exemplo para o mapa
    # No Brasil, use coordenadas negativas para latitude e longitude (aproximadamente)
    # Exemplo: S√£o Paulo: lat ~-23.55, lon ~-46.63
    # Exemplo: Rio de Janeiro: lat ~-22.90, lon ~-43.17
    map_data = pd.DataFrame(
        np.random.randn(20, 2) / [10, 10] + [-23.5505, -46.6333], # Coordenadas pr√≥ximas a SP
        columns=['lat', 'lon']
    )
    st.map(map_data, zoom=10)

    st.subheader("Detalhes da Ocorr√™ncia Selecionada (Simula√ß√£o)")
    ocorrencia_id = st.text_input("ID da Ocorr√™ncia (Ex: 12345):", "")
    if st.button("Buscar Detalhes da Ocorr√™ncia"):
        if ocorrencia_id:
            st.info(f"‚ö†Ô∏è Implementa√ß√£o em andamento: Busca de detalhes para ocorr√™ncia {ocorrencia_id}.")
        else:
            st.warning("Por favor, insira um ID de ocorr√™ncia.")


elif pagina_selecionada == "Relat√≥rios Detalhados":
    st.header("üìä Relat√≥rios Detalhados")
    st.markdown("Acesse an√°lises e estat√≠sticas sobre as detec√ß√µes e o desempenho do sistema.")

    col1, col2 = st.columns(2)
    with col1:
        tipo_relatorio = st.selectbox(
            "Tipo de Relat√≥rio:",
            ("Detec√ß√µes por Per√≠odo", "Efici√™ncia de Resposta", "Tipos de Amea√ßas Comuns", "Performance por C√¢mera")
        )
    with col2:
        # Definindo datas padr√£o para evitar erro se o usu√°rio n√£o selecionar
        from datetime import datetime, timedelta
        data_hoje = datetime.now()
        data_inicio_padrao = data_hoje - timedelta(days=7)
        periodo = st.date_input(
            "Selecione o Per√≠odo:",
            [data_inicio_padrao, data_hoje] # [inicio, fim]
        )

    if st.button("Gerar Relat√≥rio"):
        if len(periodo) == 2:
            st.info(f"‚ö†Ô∏è Implementa√ß√£o em andamento: Gera√ß√£o do relat√≥rio '{tipo_relatorio}' para o per√≠odo de {periodo[0].strftime('%d/%m/%Y')} a {periodo[1].strftime('%d/%m/%Y')}.")
        else:
            st.warning("Por favor, selecione um per√≠odo v√°lido (data de in√≠cio e fim).")

    st.markdown("---")
    st.subheader("Visualiza√ß√£o do Relat√≥rio (Exemplo)")
    st.image("https://placehold.co/700x300/EFEFEF/AAAAAA/png?text=Gr√°fico+do+Relat√≥rio+Aqui", caption="Exemplo de visualiza√ß√£o de dados do relat√≥rio")


elif pagina_selecionada == "Configura√ß√µes de Alerta":
    st.header("‚öôÔ∏è Configura√ß√µes de Alerta")
    st.markdown("Personalize como e quando os alertas s√£o enviados e para quem.")

    st.subheader("N√≠veis de Risco e A√ß√µes Imediatas")
    alerta_email_n1 = st.checkbox("Ativar alertas por e-mail para N√≠vel 1 (Atividade Suspeita)", value=True)
    alerta_sms_n2 = st.checkbox("Ativar alertas por SMS para N√≠vel 2 (Amea√ßa Potencial)", value=True)
    acionar_caes_n3 = st.checkbox("Acionar C√£es-Rob√¥s automaticamente para N√≠vel 3
