import streamlit as st

# --- Configura√ß√£o da P√°gina ---
st.set_page_config(
    page_title="Olhos da Lei - IA",
    page_icon="üëÅÔ∏è",
    layout="wide"
)

# --- Barra Lateral para Navega√ß√£o ---
st.sidebar.title("Navega√ß√£o Principal")
pagina_selecionada = st.sidebar.radio(
    "Escolha uma se√ß√£o:",
    (
        "P√°gina Inicial",
        "Visualiza√ß√£o de C√¢meras Ao Vivo",
        "Mapa de Ocorr√™ncias",
        "Relat√≥rios Detalhados",
        "Configura√ß√µes de Alerta",
        "Integra√ß√£o com C√£es-Rob√¥s"
    )
)
st.sidebar.markdown("---") # Linha divis√≥ria
st.sidebar.caption("Projeto em desenvolvimento - Imers√£o Alura + Google Gemini")


# --- Conte√∫do da P√°gina (varia conforme a sele√ß√£o na barra lateral) ---

if pagina_selecionada == "P√°gina Inicial":
    st.title("üëÅÔ∏è Olhos da Lei: Super-Agente de IA")
    st.subheader("Garantindo a seguran√ßa da popula√ß√£o com Intelig√™ncia Artificial")

    st.markdown("""
    Bem-vindo ao painel de controle do **Olhos da Lei**!

    Este sistema utiliza Intelig√™ncia Artificial para monitorar espa√ßos p√∫blicos atrav√©s de c√¢meras,
    detectando potenciais amea√ßas em tempo real para uma resposta r√°pida e eficaz.

    Use o menu na barra lateral para navegar pelas diferentes funcionalidades.
    """)

    st.header("üö¶ Status da Detec√ß√£o Simulado")
    threat_level = st.selectbox(
        "Simular N√≠vel de Amea√ßa Detectada:",
        ("Nenhuma Amea√ßa", "N√≠vel 1: Atividade Suspeita", "N√≠vel 2: Amea√ßa Potencial", "N√≠vel 3: Amea√ßa Iminente!"),
        key="selectbox_inicial" # Chave √∫nica para este selectbox
    )

    if threat_level == "Nenhuma Amea√ßa":
        st.success("‚úÖ Tudo tranquilo! Nenhuma amea√ßa detectada no momento.")
    elif threat_level == "N√≠vel 1: Atividade Suspeita":
        st.info("üëÄ N√≠vel 1: Atividade suspeita detectada. Monitoramento intensificado.")
    elif threat_level == "N√≠vel 2: Amea√ßa Potencial":
        st.warning("‚ö†Ô∏è N√≠vel 2: Amea√ßa potencial identificada! Alerta enviado para as autoridades locais.")
    else:  # N√≠vel 3
        st.error("üö® N√çVEL 3: AMEA√áA IMINENTE! A√ß√£o imediata requerida! Autoridades e c√£es-rob√¥s acionados!")

elif pagina_selecionada == "Visualiza√ß√£o de C√¢meras Ao Vivo":
    st.header("üìπ Visualiza√ß√£o de C√¢meras Ao Vivo")
    st.markdown("Aqui voc√™ poder√° visualizar o feed de diferentes c√¢meras em tempo real.")

    # Placeholder para sele√ß√£o de c√¢mera
    num_cameras = 5 # Simular 5 c√¢meras
    camera_selecionada = st.selectbox(
        "Selecione uma C√¢mera:",
        [f"C√¢mera {i+1} - Localiza√ß√£o Exemplo {i+1}" for i in range(num_cameras)]
    )
    st.success(f"Exibindo feed da {camera_selecionada}...")

    # Placeholder para o v√≠deo
    st.image("https://placehold.co/600x400/000000/FFFFFF/png?text=Feed+da+C√¢mera+Aqui", caption=f"Simula√ß√£o do feed da {camera_selecionada}")
    st.info("Nota: Esta √© uma simula√ß√£o. A integra√ß√£o com feeds reais de c√¢meras ser√° implementada.")

elif pagina_selecionada == "Mapa de Ocorr√™ncias":
    st.header("üó∫Ô∏è Mapa de Ocorr√™ncias")
    st.markdown("Visualize geograficamente as ocorr√™ncias e alertas detectados.")

    # Placeholder para o mapa (poderia usar st.map futuramente com dados reais)
    st.image("https://placehold.co/600x400/EFEFEF/AAAAAA/png?text=Mapa+de+Ocorr√™ncias+Aqui", caption="Simula√ß√£o do mapa de ocorr√™ncias")
    st.markdown("""
    **Funcionalidades planejadas:**
    - Filtros por tipo de ocorr√™ncia, data e severidade.
    - Heatmaps de √°reas de maior risco.
    - Detalhes da ocorr√™ncia ao clicar em um ponto.
    """)
    # Exemplo de como voc√™ poderia adicionar um mapa real (requer dados de latitude/longitude)
    # import pandas as pd
    # import numpy as np
    # map_data = pd.DataFrame(
    #    np.random.randn(10, 2) / [20, 20] + [-23.5505, -46.6333], # Coordenadas pr√≥ximas a SP como exemplo
    #    columns=['lat', 'lon'])
    # st.map(map_data)


elif pagina_selecionada == "Relat√≥rios Detalhados":
    st.header("üìä Relat√≥rios Detalhados")
    st.markdown("Acesse an√°lises e estat√≠sticas sobre as detec√ß√µes e o desempenho do sistema.")

    # Placeholders para filtros de relat√≥rio
    col1, col2 = st.columns(2)
    with col1:
        tipo_relatorio = st.selectbox("Tipo de Relat√≥rio:", ("Detec√ß√µes por Per√≠odo", "Efici√™ncia de Resposta", "Tipos de Amea√ßas Comuns"))
    with col2:
        periodo = st.date_input("Selecione o Per√≠odo:", []) # Deixa o usu√°rio selecionar um intervalo

    st.button("Gerar Relat√≥rio")
    st.info(f"Simula√ß√£o: Gerando relat√≥rio de '{tipo_relatorio}' para o per√≠odo selecionado...")
    # Placeholder para o gr√°fico/tabela do relat√≥rio
    st.image("https://placehold.co/600x300/CCCCCC/FFFFFF/png?text=Gr√°fico+do+Relat√≥rio+Aqui", caption="Exemplo de visualiza√ß√£o de relat√≥rio")


elif pagina_selecionada == "Configura√ß√µes de Alerta":
    st.header("‚öôÔ∏è Configura√ß√µes de Alerta")
    st.markdown("Personalize como e quando os alertas s√£o enviados.")

    st.subheader("N√≠veis de Risco e A√ß√µes")
    st.checkbox("Ativar alertas por e-mail para N√≠vel 1", value=True)
    st.checkbox("Ativar alertas por SMS para N√≠vel 2", value=True)
    st.checkbox("Acionar C√£es-Rob√¥s automaticamente para N√≠vel 3")

    st.text_input("E-mails para notifica√ß√£o (separados por v√≠rgula):", "alerta@policia.gov.br, supervisor@seguranca.com")
    st.text_input("N√∫meros de SMS para notifica√ß√£o (separados por v√≠rgula):", "+5511999998888, +5521988887777")

    st.button("Salvar Configura√ß√µes de Alerta")
    st.success("Simula√ß√£o: Configura√ß√µes de alerta salvas!")

elif pagina_selecionada == "Integra√ß√£o com C√£es-Rob√¥s":
    st.header("üêï‚Äçü¶∫ Integra√ß√£o com C√£es-Rob√¥s")
    st.markdown("Monitore e controle as unidades de c√£es-rob√¥s.")

    num_robos = 3
    robo_selecionado = st.selectbox(
        "Selecione um C√£o-Rob√¥:",
        [f"Rob√¥ Guardi√£o {i+1}" for i in range(num_robos)]
    )

    st.subheader
